/*
 * Documentation
 * Documentation for backend by swagger
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DoctorLoginDTO;
import org.openapitools.client.model.DoctorModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Delete a doctor by ID
     *
     * Deletes the doctor with the specified ID. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doctorsDidDeleteTest() throws ApiException {
        Integer did = null;
        String response = api.doctorsDidDelete(did);

        // TODO: test validations
    }
    
    /**
     * Get a doctor by ID
     *
     * Returns the doctor with the specified ID. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doctorsDidGetTest() throws ApiException {
        Integer did = null;
        DoctorModel response = api.doctorsDidGet(did);

        // TODO: test validations
    }
    
    /**
     * Update a doctor by ID
     *
     * Updates the doctor with the specified ID. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doctorsDidPutTest() throws ApiException {
        Integer did = null;
        DoctorModel doctor = null;
        String response = api.doctorsDidPut(did, doctor);

        // TODO: test validations
    }
    
    /**
     * Log in a doctor
     *
     * Logs in a doctor by verifying their ID and password. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doctorsLoginPostTest() throws ApiException {
        DoctorLoginDTO doctor = null;
        String response = api.doctorsLoginPost(doctor);

        // TODO: test validations
    }
    
    /**
     * Register a new doctor
     *
     * Registers a new doctor in the system. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doctorsRegisterPostTest() throws ApiException {
        DoctorModel doctor = null;
        String response = api.doctorsRegisterPost(doctor);

        // TODO: test validations
    }
    
}
